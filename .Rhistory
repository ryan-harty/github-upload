}
estimator.ci.3 = function(data) {
formula.data = lm(strike.volume~unemployment,data=data)
return(coefficients(formula.data))
}
lm3.cis = bootstrap.ci(statistic=estimator.ci.3, simulator=resample.residuals.data3, B=1000, t.hat=estimator.ci.3(strikes2), level=0.95)
lm3.cis
sd.3=function(data,ind){
d=data[ind,]
return(
coefficients(summary(lm(strike.volume~unemployment,data=d)))[2,2]
)
}
boot3=boot(strikes2,sd.3,R=1000)
boot3
boot.ci(boot3, conf=0.95,type="norm")
summary(lm3)
lm3=lm(strike.volume~unemployment,data=strikes2)
resample.residuals.data3<- function() {
new.frame <- strikes2
new.strike.volume <- fitted(lm3)+resample(residuals(lm3))
new.frame$strike.volume <- new.strike.volume
return(new.frame)
}
estimator.ci.3 = function(data) {
formula.data = lm(strike.volume~unemployment,data=data)
return(coefficients(formula.data))
}
lm3.cis = bootstrap.ci(statistic=estimator.ci.3, simulator=resample.residuals.data3, B=1000, t.hat=estimator.ci.3(strikes2), level=0.95)
lm3.cis
sd.3=function(data,ind){
d=data[ind,]
return(
coefficients(summary(lm(strike.volume~unemployment,data=d)))[2,2]
)
}
boot3=boot(strikes2,sd.3,R=1000)
boot3
boot.ci(boot3, conf=0.95,type="norm")
summary(lm4)
lm4=lm(unemployment~strike.volume,data=strikes2)
resample.residuals.data4<- function() {
new.frame <- strikes2
new.unemployment <- fitted(lm4)+resample(residuals(lm4))
new.frame$unemployment <- new.unemployment
return(new.frame)
}
estimator.ci.4 = function(data) {
formula.data = lm(unemployment~strike.volume,data=data)
return(coefficients(formula.data))
}
lm4.cis = bootstrap.ci(statistic=estimator.ci.4, simulator=resample.residuals.data4, B=1000, t.hat=estimator.ci.4(strikes2), level=0.95)
lm4.cis
sd.4=function(data,ind){
d=data[ind,]
return(
coefficients(summary(lm(unemployment~strike.volume,data=d)))[2,2]
)
}
boot4=boot(strikes2,sd.4,R=1000)
boot4
boot.ci(boot4, conf=0.95,type="norm")
summary(lm4)
lm4=lm(unemployment~strike.volume,data=strikes2)
resample.residuals.data4<- function() {
new.frame <- strikes2
new.unemployment <- fitted(lm4)+resample(residuals(lm4))
new.frame$unemployment <- new.unemployment
return(new.frame)
}
estimator.ci.4 = function(data) {
formula.data = lm(unemployment~strike.volume,data=data)
return(coefficients(formula.data))
}
lm4.cis = bootstrap.ci(statistic=estimator.ci.4, simulator=resample.residuals.data4, B=1000, t.hat=estimator.ci.4(strikes2), level=0.95)
lm4.cis
sd.4=function(data,ind){
d=data[ind,]
return(
coefficients(summary(lm(unemployment~strike.volume,data=d)))[2,2]
)
}
boot4=boot(strikes2,sd.4,R=1000)
boot4
boot.ci(boot4, conf=0.95,type="norm")
lm5=lm(inflation~unemployment+strike.volume,data=strikes2)
resample.residuals.data5<- function() {
new.frame <- strikes2
new.inflation <- fitted(lm5)+resample(residuals(lm5))
new.frame$inflation <- new.inflation
return(new.frame)
}
estimator.sd.5 = function(data) {
formula.data = lm(inflation~unemployment+strike.volume,data=data)
return(coefficients(formula.data)[2:3,2])
}
estimator.ci.5 = function(data) {
formula.data = lm(inflation~unemployment+strike.volume,data=data)
return(coefficients(formula.data))
}
lm5.cis = bootstrap.ci(statistic=estimator.ci.5, simulator=resample.residuals.data5, B=1000, t.hat=estimator.ci.5(strikes2), level=0.95)
lm5.cis
sd.5.1=function(data,ind){
d=data[ind,]
return(
coefficients(summary(lm(inflation~unemployment+strike.volume,data=d)))[2,2]
)
}
sd.5.2=function(data,ind){
d=data[ind,]
return(
coefficients(summary(lm(inflation~unemployment+strike.volume,data=d)))[3,2]
)
}
boot5.1=boot(strikes2,sd.5.1,R=1000)
boot5.1
boot5.2=boot(strikes2,sd.5.2,R=1000)
boot5.2
boot.ci(boot5.1, conf=0.95,type="norm")
boot.ci(boot5.2, conf=0.95,type="norm")
summary(lm5)
lm5=lm(inflation~unemployment+strike.volume,data=strikes2)
resample.residuals.data5<- function() {
new.frame <- strikes2
new.inflation <- fitted(lm5)+resample(residuals(lm5))
new.frame$inflation <- new.inflation
return(new.frame)
}
estimator.sd.5 = function(data) {
formula.data = lm(inflation~unemployment+strike.volume,data=data)
return(coefficients(formula.data)[2:3,2])
}
estimator.ci.5 = function(data) {
formula.data = lm(inflation~unemployment+strike.volume,data=data)
return(coefficients(formula.data))
}
lm5.cis = bootstrap.ci(statistic=estimator.ci.5, simulator=resample.residuals.data5, B=1000, t.hat=estimator.ci.5(strikes2), level=0.95)
lm5.cis
sd.5.1=function(data,ind){
d=data[ind,]
return(
coefficients(summary(lm(inflation~unemployment+strike.volume,data=d)))[2,2]
)
}
sd.5.2=function(data,ind){
d=data[ind,]
return(
coefficients(summary(lm(inflation~unemployment+strike.volume,data=d)))[3,2]
)
}
boot5.1=boot(strikes2,sd.5.1,R=1000)
boot5.1
boot5.2=boot(strikes2,sd.5.2,R=1000)
boot5.2
boot.ci(boot5.1, conf=0.95,type="norm")
boot.ci(boot5.2, conf=0.95,type="norm")
sim.lm <- function(linfit, test.x) {
n <- nrow(test.x)
sim.frame <- data.frame(test.x)
sigma <- summary(linfit)$sigma * (n - 2)/n
y.sim <- predict(linfit, newdata = sim.frame)
y.sim <- y.sim + rnorm(n, 0, sigma)
sim.frame$density <- y.sim
return(sim.frame)
}
require("mgcv")
calc.D <- function(data) {
MSE.p <- mean((lm(density~inflation+centralization, data = data)$residuals)^2)
MSE.np.gam <- gam(density~inflation+centralization, data = data)
MSE.np <- mean(MSE.np.gam$residuals^2)
return(MSE.p - MSE.np)
}
x1=data.frame(strikes2[,c(3,5)])
diff1=mean((lm(density~inflation+centralization, data = data)$residuals)^2) - mean(gam(density~inflation+centralization, data = data)$residuals^2)
sim.D.1=replicate(1000,calc.D(sim.lm(lm1,test.x=x1)))
mean(sim.D.1>=diff1)
par(mfrow=c(1,3))
plot(strikes2$density,strikes2$inflation)
plot(strikes2$density,strikes2$centralization)
plot(strikes2$inflation,strikes2$centralization)
sim.lm <- function(linfit, test.x) {
n <- nrow(test.x)
sim.frame <- data.frame(test.x)
sigma <- summary(linfit)$sigma * (n - 2)/n
y.sim <- predict(linfit, newdata = sim.frame)
y.sim <- y.sim + rnorm(n, 0, sigma)
sim.frame$density <- y.sim
return(sim.frame)
}
require("mgcv")
calc.D <- function(data) {
MSE.p <- mean((lm(density~inflation+centralization, data = data)$residuals)^2)
MSE.np.gam <- gam(density~inflation+centralization, data = data)
MSE.np <- mean(MSE.np.gam$residuals^2)
return(MSE.p - MSE.np)
}
x1=data.frame(strikes2[,c(3,5)])
diff1=mean((lm(density~inflation+centralization, data = data)$residuals)^2) - mean(gam(density~inflation+centralization, data = data)$residuals^2)
sim.D.1=replicate(200,calc.D(sim.lm(lm1,test.x=x1)))
mean(sim.D.1>=diff1)
par(mfrow=c(1,3))
plot(strikes2$density,strikes2$inflation)
plot(strikes2$density,strikes2$centralization)
plot(strikes2$inflation,strikes2$centralization)
sim.lm <- function(linfit, test.x) {
n <- nrow(test.x)
sim.frame <- data.frame(test.x)
sigma <- summary(linfit)$sigma * (n - 2)/n
y.sim <- predict(linfit, newdata = sim.frame)
y.sim <- y.sim + rnorm(n, 0, sigma)
sim.frame$density <- y.sim
return(sim.frame)
}
require("mgcv")
calc.D <- function(data) {
MSE.p <- mean((lm(density~inflation+centralization, data = data)$residuals)^2)
MSE.np.gam <- gam(density~inflation+centralization, data = data)
MSE.np <- mean(MSE.np.gam$residuals^2)
return(MSE.p - MSE.np)
}
x1=data.frame(strikes2[,c(3,5)])
diff1=mean((lm(density~inflation+centralization, data = data)$residuals)^2) - mean(gam(density~inflation+centralization, data = data)$residuals^2)
sim.D.1=replicate(200,calc.D(sim.lm(lm1,test.x=x1)))
mean(sim.D.1>=diff1)
par(mfrow=c(1,3))
plot(strikes2$inflation,strikes2$density)
plot(strikes2$centralization,strikes2$density)
plot(strikes2$inflation,strikes2$centralization)
sim.lm <- function(linfit, test.x) {
n <- nrow(test.x)
sim.frame <- data.frame(test.x)
sigma <- summary(linfit)$sigma * (n - 2)/n
y.sim <- predict(linfit, newdata = sim.frame)
y.sim <- y.sim + rnorm(n, 0, sigma)
sim.frame$centralization <- y.sim
return(sim.frame)
}
require("mgcv")
calc.D <- function(data) {
MSE.p <- mean((lm(centralization~left.parliament+unemployment+strike.volume, data = data)$residuals)^2)
MSE.np.gam <- gam(centralization~left.parliament+unemployment+strike.volume, data = data)
MSE.np <- mean(MSE.np.gam$residuals^2)
return(MSE.p - MSE.np)
}
x2=data.frame(strikes2[,c(4,2,1)])
diff2=mean((lm(centralization~left.parliament+unemployment+strike.volume, data = data)$residuals)^2) - mean(gam(centralization~left.parliament+unemployment+strike.volume, data = data)$residuals^2)
sim.D.2=replicate(200,calc.D(sim.lm(lm2,test.x=x2)))
mean(sim.D.2>=diff2)
par(mfrow=c(2,3))
plot(strikes2$left.parliament,strikes2$centralization)
plot(strikes2$unemployment,strikes2$centralization)
plot(strikes2$strike.volume,strikes2$centralization)
plot(strikes2$left.parliament,strikes2$strike.volume)
plot(strikes2$left.parliament,strikes2$unemployment)
plot(strikes2$strike.volume,strikes2$unemployment)
sim.lm <- function(linfit, test.x) {
n <- nrow(test.x)
sim.frame <- data.frame(test.x)
sigma <- summary(linfit)$sigma * (n - 2)/n
y.sim <- predict(linfit, newdata = sim.frame)
y.sim <- y.sim + rnorm(n, 0, sigma)
sim.frame$strike.volume <- y.sim
return(sim.frame)
}
require("mgcv")
calc.D <- function(data) {
MSE.p <- mean((lm(strike.volume~unemployment, data = data)$residuals)^2)
MSE.np.gam <- gam(strike.volume~unemployment, data = data)
MSE.np <- mean(MSE.np.gam$residuals^2)
return(MSE.p - MSE.np)
}
x3=data.frame(unemployment=strikes2$unemployment)
diff3=mean((lm(strike.volume~unemployment, data = data)$residuals)^2) - mean(gam(strike.volume~unemployment, data = data)$residuals^2)
sim.D.3=replicate(200,calc.D(sim.lm(lm3,test.x=x3)))
mean(sim.D.3>=diff3)
plot(strikes2$strike.volume,strikes2$unemployment)
sim.lm <- function(linfit, test.x) {
n <- nrow(test.x)
sim.frame <- data.frame(test.x)
sigma <- summary(linfit)$sigma * (n - 2)/n
y.sim <- predict(linfit, newdata = sim.frame)
y.sim <- y.sim + rnorm(n, 0, sigma)
sim.frame$strike.volume <- y.sim
return(sim.frame)
}
require("mgcv")
calc.D <- function(data) {
MSE.p <- mean((lm(strike.volume~unemployment, data = data)$residuals)^2)
MSE.np.gam <- gam(strike.volume~unemployment, data = data)
MSE.np <- mean(MSE.np.gam$residuals^2)
return(MSE.p - MSE.np)
}
x3=data.frame(unemployment=strikes2$unemployment)
diff3=mean((lm(strike.volume~unemployment, data = data)$residuals)^2) - mean(gam(strike.volume~unemployment, data = data)$residuals^2)
sim.D.3=replicate(200,calc.D(sim.lm(lm3,test.x=x3)))
mean(sim.D.3>=diff3)
plot(strikes2$unemployment,strikes2$strike.volume)
sim.lm <- function(linfit, test.x) {
n <- nrow(test.x)
sim.frame <- data.frame(test.x)
sigma <- summary(linfit)$sigma * (n - 2)/n
y.sim <- predict(linfit, newdata = sim.frame)
y.sim <- y.sim + rnorm(n, 0, sigma)
sim.frame$unemployment <- y.sim
return(sim.frame)
}
require("mgcv")
calc.D <- function(data) {
MSE.p <- mean((lm(unemployment~strike.volume, data = data)$residuals)^2)
MSE.np.gam <- gam(unemployment~strike.volume, data = data)
MSE.np <- mean(MSE.np.gam$residuals^2)
return(MSE.p - MSE.np)
}
x4=data.frame(strike.volume=strikes2[,1])
diff4=mean((lm(unemployment~strike.volume, data = data)$residuals)^2) - mean(gam(unemployment~strike.volume, data = data)$residuals^2)
sim.D.4=replicate(200,calc.D(sim.lm(lm4,test.x=x4)))
mean(sim.D.4>=diff4)
plot(strikes2$strike.volume,strikes2$unemployment)
head(strikes2)
sim.lm <- function(linfit, test.x) {
n <- nrow(test.x)
sim.frame <- data.frame(test.x)
sigma <- summary(linfit)$sigma * (n - 2)/n
y.sim <- predict(linfit, newdata = sim.frame)
y.sim <- y.sim + rnorm(n, 0, sigma)
sim.frame$unemployment <- y.sim
return(sim.frame)
}
require("mgcv")
calc.D <- function(data) {
MSE.p <- mean((lm(unemployment~strike.volume, data = data)$residuals)^2)
MSE.np.gam <- gam(unemployment~strike.volume, data = data)
MSE.np <- mean(MSE.np.gam$residuals^2)
return(MSE.p - MSE.np)
}
x4=data.frame(strike.volume=strikes2[,1])
diff4=mean((lm(unemployment~strike.volume, data = data)$residuals)^2) - mean(gam(unemployment~strike.volume, data = data)$residuals^2)
sim.D.4=replicate(200,calc.D(sim.lm(lm4,test.x=x4)))
mean(sim.D.4>=diff4)
plot(strikes2$strike.volume,strikes2$unemployment)
calc.D <- function(data) {
MSE.p <- mean((lm(inflation ~ strike.volume + unemployment, data = data)$residuals)^2)
MSE.np.gam <- gam(inflation ~ strike.volume + unemployment, data = data)
MSE.np <- mean(MSE.np.gam$residuals^2)
return(MSE.p - MSE.np)
}
sim.lm <- function(linfit, test.x) {
n <- nrow(test.x)
sim.frame <- data.frame(test.x)
sigma <- summary(linfit)$sigma * (n - 2)/n
y.sim <- predict(linfit, newdata = sim.frame)
y.sim <- y.sim + rnorm(n, 0, sigma)
sim.frame$inflation <- y.sim
return(sim.frame)
}
require("mgcv")
calc.D <- function(data) {
MSE.p <- mean((lm(inflation ~ strike.volume + unemployment, data = data)$residuals)^2)
MSE.np.gam <- gam(inflation ~ strike.volume + unemployment, data = data)
MSE.np <- mean(MSE.np.gam$residuals^2)
return(MSE.p - MSE.np)
}
x5=data.frame(strikes2[,c(1:2)])
diff5=mean((lm(inflation ~ strike.volume + unemployment, data = data)$residuals)^2) - mean(gam(inflation ~ strike.volume + unemployment, data = data)$residuals^2)
sim.D.5=replicate(200,calc.D(sim.lm(lm5,test.x=x5)))
mean(sim.D.5>=diff5)
par(mfrow=c(1,3))
plot(strikes2$inflation,strikes2$strike.volume)
plot(strikes2$inflation,strikes2$unemployment)
plot(strikes2$strike.volume,strikes2$unemployment)
calc.D <- function(data) {
MSE.p <- mean((lm(inflation ~ strike.volume + unemployment, data = data)$residuals)^2)
MSE.np.gam <- gam(inflation ~ strike.volume + unemployment, data = data)
MSE.np <- mean(MSE.np.gam$residuals^2)
return(MSE.p - MSE.np)
}
sim.lm <- function(linfit, test.x) {
n <- nrow(test.x)
sim.frame <- data.frame(test.x)
sigma <- summary(linfit)$sigma * (n - 2)/n
y.sim <- predict(linfit, newdata = sim.frame)
y.sim <- y.sim + rnorm(n, 0, sigma)
sim.frame$inflation <- y.sim
return(sim.frame)
}
require("mgcv")
calc.D <- function(data) {
MSE.p <- mean((lm(inflation ~ strike.volume + unemployment, data = data)$residuals)^2)
MSE.np.gam <- gam(inflation ~ strike.volume + unemployment, data = data)
MSE.np <- mean(MSE.np.gam$residuals^2)
return(MSE.p - MSE.np)
}
x5=data.frame(strikes2[,c(1:2)])
diff5=mean((lm(inflation ~ strike.volume + unemployment, data = data)$residuals)^2) - mean(gam(inflation ~ strike.volume + unemployment, data = data)$residuals^2)
sim.D.5=replicate(200,calc.D(sim.lm(lm5,test.x=x5)))
mean(sim.D.5>=diff5)
par(mfrow=c(1,3))
plot(strikes2$strike.volume,strikes2$inflation)
plot(strikes2$unemployment,strikes2$inflation)
plot(strikes2$strike.volume,strikes2$unemployment)
summary(lm1)
summary(lm1)
summary(lm2)
summary(lm3)
summary(lm4)
summary(lm5)
lm3a=lm(density~strike.volume+strike.volume*unemployment,data=strikes2)
summary(lm3a)
means_vector=rep(0,length(strikes2[,1]))
for (i in length(strikes2[,1])){
means_vector[i]=(strikes2[i,1]-mean(strikes2[,1]))^2
}
coefficients(summary(lm3a))[2,1]*(mean(means_vector))^(0.5)
lm3b=lm(density~.,data=strikes2)
summary(lm3b)
coefficients(summary(lm3b))[2,1]*(mean(means_vector))^(0.5)
lm3a=lm(density~strike.volume+strike.volume*unemployment,data=strikes2)
means_vector=rep(0,length(strikes2[,1]))
for (i in length(strikes2[,1])){
means_vector[i]=(strikes2[i,1]-mean(strikes2[,1]))^2
}
EC1=coefficients(summary(lm3a))[2,1]*(mean(means_vector))^(0.5)
lm3b=lm(density~.,data=strikes2)
EC2=coefficients(summary(lm3b))[2,1]*(mean(means_vector))^(0.5)
lm3a=lm(density~strike.volume+strike.volume*unemployment,data=strikes2)
means_vector=rep(0,length(strikes2[,1]))
for (i in length(strikes2[,1])){
means_vector[i]=(strikes2[i,1]-mean(strikes2[,1]))^2
}
EC1=coefficients(summary(lm3a))[2,1]*(mean(means_vector))^(0.5)
lm3b=lm(density~.,data=strikes2)
EC2=coefficients(summary(lm3b))[2,1]*(mean(means_vector))^(0.5)
EC1
EC2
a=rep(0,200)
nrow(a)
nrow(data.frame(a))
sim.lm <- function(linfit, test.x) {
n <- nrow(test.x)
sim.frame <- data.frame(test.x)
sigma <- summary(linfit)$sigma * (n - 2)/n
y.sim <- predict(linfit, newdata = sim.frame)
y.sim <- y.sim + rnorm(n, 0, sigma)
sim.frame$density <- y.sim
return(sim.frame)
}
require("mgcv")
calc.D <- function(data) {
MSE.p <- mean((lm(density~inflation+centralization, data = data)$residuals)^2)
MSE.np.gam <- gam(density~inflation+centralization, data = data)
MSE.np <- mean(MSE.np.gam$residuals^2)
return(MSE.p - MSE.np)
}
x1=data.frame(strikes2[,c(3,5)])
diff1=mean((lm(density~inflation+centralization, data = data)$residuals)^2) - mean(gam(density ~ inflation + centralization, data = data)$residuals^2)
sim.D.1=replicate(200,calc.D(sim.lm(lm1,test.x=x1)))
mean(sim.D.1>=diff1)
par(mfrow=c(1,3))
plot(strikes2$inflation,strikes2$density)
plot(strikes2$centralization,strikes2$density)
plot(strikes2$inflation,strikes2$centralization)
sim.lm <- function(linfit, test.x) {
n <- nrow(test.x)
sim.frame <- data.frame(test.x)
sigma <- summary(linfit)$sigma * (n - 2)/n
y.sim <- predict(linfit, newdata = sim.frame)
y.sim <- y.sim + rnorm(n, 0, sigma)
sim.frame$centralization <- y.sim
return(sim.frame)
}
require("mgcv")
calc.D <- function(data) {
MSE.p <- mean((lm(centralization~left.parliament+unemployment+strike.volume, data = data)$residuals)^2)
MSE.np.gam <- gam(centralization~left.parliament+unemployment+strike.volume, data = data)
MSE.np <- mean(MSE.np.gam$residuals^2)
return(MSE.p - MSE.np)
}
x2=data.frame(strikes2[,c(4,2,1)])
diff2=mean((lm(centralization~left.parliament+unemployment+strike.volume, data = data)$residuals)^2) - mean(gam(centralization~left.parliament+unemployment+strike.volume, data = data)$residuals^2)
sim.D.2=replicate(200,calc.D(sim.lm(lm2,test.x=x2)))
mean(sim.D.2>=diff2)
par(mfrow=c(2,3))
plot(strikes2$left.parliament,strikes2$centralization)
plot(strikes2$unemployment,strikes2$centralization)
plot(strikes2$strike.volume,strikes2$centralization)
plot(strikes2$left.parliament,strikes2$strike.volume)
plot(strikes2$left.parliament,strikes2$unemployment)
plot(strikes2$strike.volume,strikes2$unemployment)
summary(lm3a)
lm3a=lm(density~strike.volume*unemployment,data=strikes2)
summary(lm3a)
lm3a=lm(density~strike.volume+strike.volume*unemployment,data=strikes2)
summary(lm3a)
means_vector=rep(0,length(strikes2[,1]))
for (i in length(strikes2[,1])){
means_vector[i]=(strikes2[i,1]-mean(strikes2[,1]))^2
}
EC1=coefficients(summary(lm3a))[2,1]*(mean(means_vector))^(0.5)
lm3b=lm(density~.,data=strikes2)
EC2=coefficients(summary(lm3b))[2,1]*(mean(means_vector))^(0.5)
lm3a=lm(density~strike.volume+strike.volume*unemployment,data=strikes2)
summary(lm3a)
means_vector=rep(0,length(strikes2[,1]))
for (i in length(strikes2[,1])){
means_vector[i]=(strikes2[i,1]-mean(strikes2[,1]))^2
}
EC1=coefficients(summary(lm3a))[2,1]*(mean(means_vector))^(0.5)
lm3b=lm(density~.,data=strikes2)
EC2=coefficients(summary(lm3b))[2,1]*(mean(means_vector))^(0.5)
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
